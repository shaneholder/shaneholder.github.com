<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: data generation | No Dogma]]></title>
  <link href="http://shaneholder.github.io/blog/categories/data-generation/atom.xml" rel="self"/>
  <link href="http://shaneholder.github.io/"/>
  <updated>2013-09-08T13:17:17-05:00</updated>
  <id>http://shaneholder.github.io/</id>
  <author>
    <name><![CDATA[Shane Holder]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using POSH to generate sample data]]></title>
    <link href="http://shaneholder.github.io/blog/2013/07/20/using-posh-to-generate-sample-data/"/>
    <updated>2013-07-20T14:44:00-05:00</updated>
    <id>http://shaneholder.github.io/blog/2013/07/20/using-posh-to-generate-sample-data</id>
    <content type="html"><![CDATA[<p>It seems like I&rsquo;m constantly re-inventing the wheel when it comes to generating data for testing code.  This week I needed roughly 50K records containing names, dates and whether they were male or female names. Let&rsquo;s take a look at how PowerShell might be able to help us out.</p>

<p>I started with a template of what the input to redis should look like <em>I&rsquo;m on Windows and redis &mdash;pipe does not work</em> so what I want looks something like:</p>

<p><code>
hmset patient:^id^ lastName Doe firstName John birthDate 1/1/2012 appointment "2/2/2012 13:00"
</code></p>

<p>This will give me a hash in redis with the properties lastName, firstName, birthDate and appointment and the key to the hash will be patient:000001.  Since, I got my start in computers on Unix I&rsquo;m pretty familiar with shell scripting and doing this with bash was pretty easy.</p>

<p><code>bash
for f in {1..50000};
do printf -v id "%06d" $f;
cat patient | sed "s/|id|/$id/";
done | redis-cli
</code></p>

<p>and in PowerShell</p>

<p><code>powershell
$f = gc ./patient; 0..50000 |
% { $x = "{0:D6}" -f $_; $f.replace("^id^", $x)} |
redis-cli
</code>
Ok, so maybe that&rsquo;s a bit cryptic let&rsquo;s break it down.</p>

<p>```powershell
$f = get-content ./patient; # load the template into memory
0..50000 |             # generate an enumeration from 0 to 50000
% {                    # start a for-each
$x = &ldquo;{0:D6}&rdquo; -f $_    # format the value from the enumeration</p>

<pre><code>                   # prefixing with leading 0's
</code></pre>

<p>$f.replace(&ldquo;^id^&rdquo;, $x) # string replace the template</p>

<pre><code>                   # ^id^ with the formatted value
</code></pre>

<p>} |
redis-cli
```</p>

<p>At this point I&rsquo;m pretty excited but searching 50000 records of all the same first name and last name is pretty boring so how can I generate first names and last names?</p>

<p>Not being the creative type, or having the patience I looked to the web for lists of names.  Fortunately the government knows my needs and publishes lists of popular names by decade. Here is the list for the <a href="http://www.ssa.gov/OACT/babynames/decades/names2000s.html">2000s</a>.  Now I just needed some last names, <a href="http://en.wikipedia.org/wiki/List_of_most_common_surnames_in_North_America">Wikipedia</a> handled this one for me.  There are larger lists at: <a href="http://ieproject.googlecode.com/svn/wiki/reference/Dataset/Dictionary/">ieproject.googlecode.com</a></p>

<p>I took the lists of names and put them in 2 files, one for first names and one for last names.  The first name file contains the sex indicator.</p>

<p>Now the fun part, how do I combine these together to import them into <a href="http://redis.io/">redis</a>.  Turns out PowerShell has a <code>Get-Random</code> command perfect&hellip; so I can load my names up into an array in PS and use <code>Get-Random -maximum</code> to index into them&hellip;but wait, further reading of the <code>Get-Random</code> states:</p>

<blockquote><p>You can use the parameters of Get-Random to specify a seed number,
minimum and maximum values, <u>and the number of objects returned
from a submitted collection.</u></p></blockquote>

<p>Does that mean what I think it does?</p>

<p><code>powershell
$f=gc .\firstNames.txt
get-random $f
F BARBIE
get-random $f
M Ringo
</code>
Woah, now that&rsquo;s cool.</p>

<p><code>powershell
$firstNames=gc -encoding utf8 .\firstNames.txt
$lastNames=gc -encoding utf8 .\lastNames.txt
$f = gc ./patient2
0..50000 |
% {
$x = "{0:D6}" -f $_
$firstName=(get-random $firstNames).split();
$f.replace("^id^",$x).
replace("^firstName^", $firstName[1]).
replace("^lastName^", (get-random $lastNames).
ToLower()).
replace("^sex^", $firstName[0])
} | redis-cli
</code></p>
]]></content>
  </entry>
  
</feed>
